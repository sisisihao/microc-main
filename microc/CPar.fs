// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

//三元组各位取出
let first(a,_,_) = a
let second(_,b,_) = b
let third(_,_,c) = c

# 27 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | NOT
  | SEQOR
  | SEQAND
  | PREDEC
  | PREINC
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | SWITCH
  | CASE
  | COLON
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | FOR
  | BREAK
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
  | CSTBOOL of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_PREDEC
    | TOKEN_PREINC
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_COLON
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_FOR
    | TOKEN_BREAK
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_CSTBOOL
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_VarDecWithAssign
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_CaseList
    | NONTERM_CaseDec
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | NOT  -> 11 
  | SEQOR  -> 12 
  | SEQAND  -> 13 
  | PREDEC  -> 14 
  | PREINC  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | SWITCH  -> 22 
  | CASE  -> 23 
  | COLON  -> 24 
  | PLUS  -> 25 
  | MINUS  -> 26 
  | TIMES  -> 27 
  | DIV  -> 28 
  | MOD  -> 29 
  | CHAR  -> 30 
  | ELSE  -> 31 
  | IF  -> 32 
  | INT  -> 33 
  | NULL  -> 34 
  | PRINT  -> 35 
  | PRINTLN  -> 36 
  | RETURN  -> 37 
  | VOID  -> 38 
  | WHILE  -> 39 
  | FOR  -> 40 
  | BREAK  -> 41 
  | CSTSTRING _ -> 42 
  | NAME _ -> 43 
  | CSTINT _ -> 44 
  | CSTBOOL _ -> 45 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_NOT 
  | 12 -> TOKEN_SEQOR 
  | 13 -> TOKEN_SEQAND 
  | 14 -> TOKEN_PREDEC 
  | 15 -> TOKEN_PREINC 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_SWITCH 
  | 23 -> TOKEN_CASE 
  | 24 -> TOKEN_COLON 
  | 25 -> TOKEN_PLUS 
  | 26 -> TOKEN_MINUS 
  | 27 -> TOKEN_TIMES 
  | 28 -> TOKEN_DIV 
  | 29 -> TOKEN_MOD 
  | 30 -> TOKEN_CHAR 
  | 31 -> TOKEN_ELSE 
  | 32 -> TOKEN_IF 
  | 33 -> TOKEN_INT 
  | 34 -> TOKEN_NULL 
  | 35 -> TOKEN_PRINT 
  | 36 -> TOKEN_PRINTLN 
  | 37 -> TOKEN_RETURN 
  | 38 -> TOKEN_VOID 
  | 39 -> TOKEN_WHILE 
  | 40 -> TOKEN_FOR 
  | 41 -> TOKEN_BREAK 
  | 42 -> TOKEN_CSTSTRING 
  | 43 -> TOKEN_NAME 
  | 44 -> TOKEN_CSTINT 
  | 45 -> TOKEN_CSTBOOL 
  | 48 -> TOKEN_end_of_input
  | 46 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Topdec 
    | 7 -> NONTERM_Vardec 
    | 8 -> NONTERM_VarDecWithAssign 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Vardesc 
    | 13 -> NONTERM_Vardesc 
    | 14 -> NONTERM_Fundec 
    | 15 -> NONTERM_Fundec 
    | 16 -> NONTERM_Paramdecs 
    | 17 -> NONTERM_Paramdecs 
    | 18 -> NONTERM_Paramdecs1 
    | 19 -> NONTERM_Paramdecs1 
    | 20 -> NONTERM_Block 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_StmtOrDecSeq 
    | 24 -> NONTERM_StmtOrDecSeq 
    | 25 -> NONTERM_Stmt 
    | 26 -> NONTERM_Stmt 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_StmtM 
    | 35 -> NONTERM_StmtM 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_CaseList 
    | 42 -> NONTERM_CaseList 
    | 43 -> NONTERM_CaseList 
    | 44 -> NONTERM_CaseDec 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_AtExprNotAccess 
    | 69 -> NONTERM_AtExprNotAccess 
    | 70 -> NONTERM_AtExprNotAccess 
    | 71 -> NONTERM_Access 
    | 72 -> NONTERM_Access 
    | 73 -> NONTERM_Access 
    | 74 -> NONTERM_Access 
    | 75 -> NONTERM_Access 
    | 76 -> NONTERM_Exprs 
    | 77 -> NONTERM_Exprs 
    | 78 -> NONTERM_Exprs1 
    | 79 -> NONTERM_Exprs1 
    | 80 -> NONTERM_Const 
    | 81 -> NONTERM_Const 
    | 82 -> NONTERM_Const 
    | 83 -> NONTERM_Const 
    | 84 -> NONTERM_Type 
    | 85 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 48 
let _fsyacc_tagOfErrorTerminal = 46

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | PREDEC  -> "PREDEC" 
  | PREINC  -> "PREINC" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | COLON  -> "COLON" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | FOR  -> "FOR" 
  | BREAK  -> "BREAK" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 
  | CSTBOOL _ -> "CSTBOOL" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | PREDEC  -> (null : System.Object) 
  | PREINC  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | BREAK  -> (null : System.Object) 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 31us; 40us; 35us; 40us; 41us; 40us; 43us; 48us; 46us; 48us; 49us; 48us; 52us; 48us; 6us; 65535us; 0us; 8us; 4us; 8us; 43us; 51us; 46us; 51us; 49us; 51us; 52us; 51us; 5us; 65535us; 11us; 15us; 12us; 14us; 13us; 14us; 20us; 21us; 22us; 23us; 2us; 65535us; 0us; 10us; 4us; 10us; 2us; 65535us; 31us; 32us; 35us; 36us; 3us; 65535us; 31us; 39us; 35us; 39us; 41us; 42us; 14us; 65535us; 33us; 34us; 37us; 38us; 43us; 63us; 46us; 63us; 49us; 63us; 52us; 63us; 71us; 63us; 79us; 63us; 80us; 63us; 82us; 63us; 83us; 63us; 91us; 63us; 92us; 63us; 114us; 63us; 4us; 65535us; 43us; 44us; 46us; 47us; 49us; 50us; 52us; 53us; 6us; 65535us; 43us; 46us; 46us; 46us; 49us; 46us; 52us; 46us; 80us; 104us; 114us; 115us; 12us; 65535us; 43us; 54us; 46us; 54us; 49us; 54us; 52us; 54us; 71us; 72us; 79us; 81us; 80us; 55us; 82us; 84us; 83us; 84us; 91us; 93us; 92us; 93us; 114us; 54us; 8us; 65535us; 43us; 56us; 46us; 56us; 49us; 56us; 52us; 56us; 80us; 56us; 83us; 103us; 92us; 105us; 114us; 56us; 43us; 65535us; 16us; 17us; 43us; 57us; 46us; 57us; 49us; 57us; 52us; 57us; 59us; 61us; 65us; 66us; 67us; 68us; 69us; 70us; 71us; 57us; 75us; 78us; 76us; 77us; 79us; 57us; 80us; 57us; 82us; 57us; 83us; 57us; 87us; 90us; 88us; 89us; 91us; 57us; 92us; 57us; 95us; 96us; 112us; 113us; 114us; 57us; 123us; 124us; 126us; 149us; 129us; 130us; 131us; 132us; 150us; 134us; 151us; 135us; 152us; 136us; 153us; 137us; 154us; 138us; 155us; 139us; 156us; 140us; 157us; 141us; 158us; 142us; 159us; 143us; 160us; 144us; 161us; 145us; 162us; 147us; 164us; 146us; 175us; 148us; 178us; 149us; 2us; 65535us; 98us; 99us; 110us; 111us; 2us; 65535us; 98us; 110us; 110us; 110us; 43us; 65535us; 16us; 108us; 43us; 108us; 46us; 108us; 49us; 108us; 52us; 108us; 59us; 108us; 65us; 108us; 67us; 108us; 69us; 108us; 71us; 108us; 75us; 108us; 76us; 108us; 79us; 108us; 80us; 108us; 82us; 108us; 83us; 108us; 87us; 108us; 88us; 108us; 91us; 108us; 92us; 108us; 95us; 108us; 112us; 108us; 114us; 108us; 123us; 108us; 126us; 108us; 129us; 108us; 131us; 108us; 150us; 108us; 151us; 108us; 152us; 108us; 153us; 108us; 154us; 108us; 155us; 108us; 156us; 108us; 157us; 108us; 158us; 108us; 159us; 108us; 160us; 108us; 161us; 108us; 162us; 108us; 164us; 109us; 175us; 108us; 178us; 108us; 44us; 65535us; 16us; 116us; 43us; 116us; 46us; 116us; 49us; 116us; 52us; 116us; 59us; 116us; 65us; 116us; 67us; 116us; 69us; 116us; 71us; 116us; 75us; 116us; 76us; 116us; 79us; 116us; 80us; 116us; 82us; 116us; 83us; 116us; 87us; 116us; 88us; 116us; 91us; 116us; 92us; 116us; 95us; 116us; 112us; 116us; 114us; 116us; 123us; 116us; 126us; 116us; 129us; 116us; 131us; 116us; 150us; 116us; 151us; 116us; 152us; 116us; 153us; 116us; 154us; 116us; 155us; 116us; 156us; 116us; 157us; 116us; 158us; 116us; 159us; 116us; 160us; 116us; 161us; 116us; 162us; 116us; 164us; 116us; 172us; 174us; 175us; 116us; 178us; 116us; 48us; 65535us; 16us; 107us; 43us; 107us; 46us; 107us; 49us; 107us; 52us; 107us; 59us; 107us; 65us; 107us; 67us; 107us; 69us; 107us; 71us; 107us; 75us; 107us; 76us; 107us; 79us; 107us; 80us; 107us; 82us; 107us; 83us; 107us; 87us; 107us; 88us; 107us; 91us; 107us; 92us; 107us; 95us; 107us; 112us; 107us; 114us; 107us; 117us; 118us; 119us; 120us; 123us; 107us; 126us; 107us; 129us; 107us; 131us; 107us; 150us; 107us; 151us; 107us; 152us; 107us; 153us; 107us; 154us; 107us; 155us; 107us; 156us; 107us; 157us; 107us; 158us; 107us; 159us; 107us; 160us; 107us; 161us; 107us; 162us; 107us; 164us; 106us; 166us; 167us; 169us; 170us; 172us; 173us; 175us; 107us; 178us; 107us; 1us; 65535us; 126us; 127us; 2us; 65535us; 126us; 177us; 178us; 179us; 44us; 65535us; 16us; 163us; 43us; 163us; 46us; 163us; 49us; 163us; 52us; 163us; 59us; 163us; 65us; 163us; 67us; 163us; 69us; 163us; 71us; 163us; 75us; 163us; 76us; 163us; 79us; 163us; 80us; 163us; 82us; 163us; 83us; 163us; 87us; 163us; 88us; 163us; 91us; 163us; 92us; 163us; 95us; 163us; 112us; 163us; 114us; 163us; 123us; 163us; 126us; 163us; 129us; 163us; 131us; 163us; 150us; 163us; 151us; 163us; 152us; 163us; 153us; 163us; 154us; 163us; 155us; 163us; 156us; 163us; 157us; 163us; 158us; 163us; 159us; 163us; 160us; 163us; 161us; 163us; 162us; 163us; 164us; 163us; 172us; 163us; 175us; 163us; 178us; 163us; 9us; 65535us; 0us; 13us; 4us; 13us; 31us; 11us; 35us; 11us; 41us; 11us; 43us; 12us; 46us; 12us; 49us; 12us; 52us; 12us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 26us; 32us; 35us; 38us; 42us; 57us; 62us; 69us; 82us; 91us; 135us; 138us; 141us; 185us; 230us; 279us; 281us; 284us; 329us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 5us; 1us; 6us; 1us; 7us; 2us; 7us; 8us; 3us; 7us; 8us; 15us; 4us; 7us; 8us; 12us; 13us; 3us; 7us; 12us; 13us; 1us; 8us; 14us; 8us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 9us; 2us; 9us; 15us; 1us; 10us; 3us; 10us; 12us; 13us; 1us; 11us; 3us; 11us; 12us; 13us; 1us; 11us; 2us; 12us; 13us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 17us; 2us; 18us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 1us; 20us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 3us; 25us; 32us; 36us; 1us; 26us; 14us; 27us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 27us; 2us; 28us; 29us; 1us; 28us; 14us; 29us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 29us; 1us; 30us; 1us; 31us; 1us; 31us; 14us; 31us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 31us; 14us; 31us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 31us; 14us; 31us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 31us; 1us; 31us; 1us; 32us; 3us; 32us; 36us; 37us; 1us; 32us; 3us; 32us; 36us; 37us; 16us; 32us; 36us; 37us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 32us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 32us; 3us; 32us; 36us; 37us; 1us; 32us; 1us; 32us; 2us; 32us; 36us; 1us; 32us; 1us; 33us; 2us; 33us; 38us; 1us; 33us; 2us; 33us; 38us; 15us; 33us; 38us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 33us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 33us; 2us; 33us; 38us; 1us; 33us; 1us; 34us; 1us; 34us; 14us; 34us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 6us; 39us; 48us; 49us; 50us; 72us; 75us; 5us; 39us; 48us; 49us; 50us; 75us; 1us; 40us; 2us; 40us; 69us; 2us; 42us; 43us; 1us; 43us; 1us; 44us; 14us; 44us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 44us; 1us; 44us; 1us; 45us; 1us; 46us; 2us; 46us; 75us; 1us; 47us; 2us; 47us; 75us; 1us; 48us; 1us; 49us; 1us; 50us; 14us; 50us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 2us; 51us; 71us; 1us; 51us; 1us; 51us; 1us; 51us; 1us; 52us; 14us; 52us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 53us; 14us; 53us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 1us; 54us; 14us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 66us; 67us; 13us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 67us; 14us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 75us; 15us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 63us; 64us; 65us; 66us; 67us; 78us; 79us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 68us; 2us; 69us; 72us; 1us; 69us; 1us; 70us; 2us; 70us; 75us; 1us; 71us; 1us; 72us; 2us; 72us; 75us; 1us; 72us; 2us; 73us; 74us; 2us; 73us; 75us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 77us; 1us; 79us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 83us; 1us; 84us; 1us; 85us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 27us; 31us; 36us; 40us; 42us; 57us; 59us; 62us; 64us; 68us; 70us; 74us; 76us; 79us; 81us; 83us; 85us; 87us; 89us; 91us; 93us; 95us; 97us; 99us; 101us; 103us; 105us; 107us; 110us; 112us; 114us; 116us; 118us; 120us; 122us; 124us; 126us; 128us; 130us; 132us; 134us; 136us; 138us; 142us; 144us; 159us; 161us; 164us; 166us; 181us; 183us; 185us; 187us; 189us; 204us; 206us; 221us; 223us; 238us; 240us; 242us; 244us; 248us; 250us; 254us; 271us; 286us; 288us; 292us; 294us; 296us; 299us; 301us; 303us; 306us; 308us; 311us; 327us; 342us; 344us; 347us; 349us; 351us; 353us; 368us; 370us; 372us; 374us; 376us; 378us; 380us; 382us; 384us; 386us; 393us; 399us; 401us; 404us; 407us; 409us; 411us; 426us; 428us; 430us; 432us; 434us; 437us; 439us; 442us; 444us; 446us; 448us; 463us; 466us; 468us; 470us; 472us; 474us; 489us; 491us; 506us; 508us; 523us; 538us; 553us; 568us; 583us; 598us; 613us; 628us; 643us; 658us; 673us; 688us; 702us; 717us; 732us; 748us; 750us; 752us; 754us; 756us; 758us; 760us; 762us; 764us; 766us; 768us; 770us; 772us; 774us; 776us; 779us; 781us; 783us; 786us; 788us; 790us; 793us; 795us; 798us; 801us; 803us; 805us; 807us; 809us; 811us; 813us; 815us; 817us; 819us; 821us; 823us; 825us; |]
let _fsyacc_action_rows = 187
let _fsyacc_actionTableElements = [|3us; 16386us; 30us; 186us; 33us; 185us; 38us; 29us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 3us; 16386us; 30us; 186us; 33us; 185us; 38us; 29us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 1us; 32768us; 7us; 9us; 0us; 16389us; 0us; 16390us; 3us; 32768us; 1us; 22us; 27us; 20us; 43us; 18us; 3us; 32768us; 1us; 22us; 27us; 20us; 43us; 18us; 3us; 32768us; 1us; 22us; 27us; 20us; 43us; 19us; 2us; 16391us; 5us; 25us; 9us; 16us; 1us; 16391us; 5us; 25us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 16392us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 0us; 16393us; 1us; 16393us; 1us; 35us; 3us; 32768us; 1us; 22us; 27us; 20us; 43us; 18us; 1us; 16394us; 5us; 25us; 3us; 32768us; 1us; 22us; 27us; 20us; 43us; 18us; 2us; 32768us; 2us; 24us; 5us; 25us; 0us; 16395us; 2us; 32768us; 6us; 26us; 44us; 27us; 0us; 16396us; 1us; 32768us; 6us; 28us; 0us; 16397us; 1us; 32768us; 43us; 30us; 1us; 32768us; 1us; 31us; 2us; 16400us; 30us; 186us; 33us; 185us; 1us; 32768us; 2us; 33us; 1us; 32768us; 3us; 43us; 0us; 16398us; 2us; 16400us; 30us; 186us; 33us; 185us; 1us; 32768us; 2us; 37us; 1us; 32768us; 3us; 43us; 0us; 16399us; 0us; 16401us; 1us; 16402us; 8us; 41us; 2us; 32768us; 30us; 186us; 33us; 185us; 0us; 16403us; 22us; 16405us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 30us; 186us; 32us; 74us; 33us; 185us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 1us; 32768us; 4us; 45us; 0us; 16404us; 22us; 16405us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 30us; 186us; 32us; 74us; 33us; 185us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16406us; 1us; 32768us; 7us; 49us; 22us; 16405us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 30us; 186us; 32us; 74us; 33us; 185us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16407us; 1us; 32768us; 7us; 52us; 22us; 16405us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 30us; 186us; 32us; 74us; 33us; 185us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16408us; 0us; 16409us; 1us; 16409us; 31us; 83us; 0us; 16410us; 14us; 32768us; 7us; 58us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 0us; 16411us; 14us; 32768us; 1us; 164us; 7us; 60us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16412us; 14us; 32768us; 7us; 62us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 0us; 16413us; 0us; 16414us; 1us; 32768us; 1us; 65us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 7us; 67us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 7us; 69us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 2us; 71us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 73us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 85us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16415us; 1us; 32768us; 1us; 75us; 1us; 32768us; 1us; 76us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 2us; 80us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 14us; 32768us; 2us; 79us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 73us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 85us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 74us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 1us; 32768us; 31us; 82us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 73us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 85us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 74us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16416us; 1us; 32768us; 1us; 87us; 1us; 32768us; 1us; 88us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 2us; 92us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 14us; 32768us; 2us; 91us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 73us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 85us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 74us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16417us; 1us; 32768us; 1us; 95us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 2us; 97us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 1us; 32768us; 3us; 98us; 1us; 16425us; 23us; 112us; 1us; 32768us; 4us; 100us; 0us; 16418us; 1us; 32768us; 7us; 102us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 5us; 16423us; 2us; 171us; 5us; 175us; 9us; 123us; 14us; 121us; 15us; 122us; 4us; 16423us; 5us; 175us; 9us; 123us; 14us; 121us; 15us; 122us; 0us; 16424us; 1us; 16424us; 2us; 165us; 1us; 16425us; 23us; 112us; 0us; 16427us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 14us; 32768us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 24us; 114us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 20us; 32768us; 1us; 164us; 3us; 43us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 22us; 94us; 26us; 182us; 27us; 172us; 32us; 74us; 34us; 184us; 35us; 131us; 36us; 133us; 37us; 59us; 39us; 86us; 40us; 64us; 41us; 101us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16428us; 0us; 16429us; 3us; 32768us; 1us; 169us; 27us; 172us; 43us; 168us; 1us; 16430us; 5us; 175us; 3us; 32768us; 1us; 169us; 27us; 172us; 43us; 168us; 1us; 16431us; 5us; 175us; 0us; 16432us; 0us; 16433us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 16434us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 1us; 16455us; 1us; 126us; 13us; 16460us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 1us; 32768us; 2us; 128us; 0us; 16435us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16436us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 16437us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 0us; 16438us; 3us; 16439us; 27us; 152us; 28us; 153us; 29us; 154us; 3us; 16440us; 27us; 152us; 28us; 153us; 29us; 154us; 0us; 16441us; 0us; 16442us; 0us; 16443us; 9us; 16444us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 9us; 16445us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 9us; 16446us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 9us; 16447us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 9us; 16448us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 9us; 16449us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 11us; 16450us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 13us; 32768us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 12us; 16451us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 14us; 32768us; 6us; 176us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 14us; 16462us; 8us; 178us; 12us; 162us; 13us; 161us; 16us; 155us; 17us; 156us; 18us; 157us; 19us; 158us; 20us; 159us; 21us; 160us; 25us; 150us; 26us; 151us; 27us; 152us; 28us; 153us; 29us; 154us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16452us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16453us; 3us; 32768us; 1us; 169us; 27us; 172us; 43us; 168us; 1us; 16454us; 5us; 175us; 0us; 16455us; 3us; 32768us; 1us; 169us; 27us; 172us; 43us; 168us; 2us; 32768us; 2us; 171us; 5us; 175us; 0us; 16456us; 8us; 32768us; 1us; 164us; 10us; 166us; 26us; 182us; 27us; 172us; 34us; 184us; 43us; 168us; 44us; 180us; 45us; 181us; 1us; 16457us; 5us; 175us; 0us; 16458us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16459us; 0us; 16461us; 13us; 32768us; 1us; 164us; 10us; 166us; 11us; 129us; 14us; 117us; 15us; 119us; 26us; 182us; 27us; 172us; 34us; 184us; 35us; 131us; 36us; 133us; 43us; 125us; 44us; 180us; 45us; 181us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 1us; 32768us; 44us; 183us; 0us; 16466us; 0us; 16467us; 0us; 16468us; 0us; 16469us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 4us; 5us; 7us; 8us; 12us; 13us; 15us; 16us; 18us; 19us; 20us; 24us; 28us; 32us; 35us; 37us; 51us; 65us; 66us; 68us; 72us; 74us; 78us; 81us; 82us; 85us; 86us; 88us; 89us; 91us; 93us; 96us; 98us; 100us; 101us; 104us; 106us; 108us; 109us; 110us; 112us; 115us; 116us; 139us; 141us; 142us; 165us; 166us; 168us; 191us; 192us; 194us; 217us; 218us; 219us; 221us; 222us; 237us; 238us; 253us; 254us; 269us; 270us; 271us; 273us; 287us; 302us; 316us; 331us; 345us; 360us; 381us; 382us; 384us; 386us; 400us; 414us; 429us; 444us; 465us; 486us; 488us; 509us; 530us; 531us; 533us; 535us; 549us; 563us; 578us; 593us; 614us; 635us; 636us; 638us; 652us; 667us; 669us; 671us; 673us; 674us; 676us; 677us; 678us; 679us; 680us; 686us; 691us; 692us; 694us; 696us; 697us; 711us; 726us; 747us; 748us; 749us; 753us; 755us; 759us; 761us; 762us; 763us; 777us; 791us; 793us; 807us; 809us; 810us; 824us; 825us; 839us; 853us; 854us; 858us; 862us; 863us; 864us; 865us; 875us; 885us; 895us; 905us; 915us; 925us; 937us; 951us; 964us; 979us; 994us; 1008us; 1022us; 1036us; 1050us; 1064us; 1078us; 1092us; 1106us; 1120us; 1134us; 1148us; 1162us; 1176us; 1177us; 1191us; 1192us; 1196us; 1198us; 1199us; 1203us; 1206us; 1207us; 1216us; 1218us; 1219us; 1233us; 1234us; 1235us; 1249us; 1250us; 1251us; 1252us; 1254us; 1255us; 1256us; 1257us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 2us; 1us; 2us; 4us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 3us; 1us; 1us; 2us; 2us; 3us; 1us; 9us; 7us; 5us; 7us; 2us; 7us; 5us; 5us; 1us; 1us; 0us; 1us; 2us; 4us; 1us; 2us; 2us; 2us; 2us; 3us; 4us; 2us; 2us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 1us; 2us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 3us; 4us; 5us; 6us; 6us; 6us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 9us; 10us; 11us; 11us; 11us; 11us; 12us; 12us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 20us; 20us; 20us; 20us; 21us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 65535us; 16389us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 65535us; 65535us; 65535us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16398us; 65535us; 65535us; 65535us; 16399us; 16401us; 65535us; 65535us; 16403us; 65535us; 65535us; 16404us; 65535us; 16406us; 65535us; 65535us; 16407us; 65535us; 65535us; 16408us; 16409us; 65535us; 16410us; 65535us; 16411us; 65535us; 16412us; 65535us; 16413us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 16419us; 16420us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 65535us; 16432us; 16433us; 65535us; 65535us; 65535us; 65535us; 65535us; 16435us; 65535us; 65535us; 65535us; 65535us; 16438us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 16458us; 65535us; 16459us; 16461us; 65535us; 16463us; 16464us; 16465us; 65535us; 16466us; 16467us; 16468us; 16469us; |]
let _fsyacc_reductions ()  =    [| 
# 461 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 470 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               Prog _1 
                   )
# 53 "CPar.fsy"
                 : Absyn.program));
# 481 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               [] 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdecs));
# 491 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 59 "CPar.fsy"
                 : 'gentype_Topdecs));
# 503 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 63 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 63 "CPar.fsy"
                 : 'gentype_Topdec));
# 514 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VarDecWithAssign in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 64 "CPar.fsy"
                                                               VarDecWithAssign (first _1,second _1,third _1) 
                   )
# 64 "CPar.fsy"
                 : 'gentype_Topdec));
# 525 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "CPar.fsy"
                                                               _1 
                   )
# 65 "CPar.fsy"
                 : 'gentype_Topdec));
# 536 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 83 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 83 "CPar.fsy"
                 : 'gentype_Vardec));
# 548 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            let _4 = parseState.GetInput(4) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 86 "CPar.fsy"
                                                               ((fst _2) _1, snd _2, _4)
                   )
# 86 "CPar.fsy"
                 : 'gentype_VarDecWithAssign));
# 561 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 96 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 96 "CPar.fsy"
                 : 'gentype_Vardesc));
# 572 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 101 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 101 "CPar.fsy"
                 : 'gentype_Vardesc));
# 583 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 103 "CPar.fsy"
                                                               _2                                      
                   )
# 103 "CPar.fsy"
                 : 'gentype_Vardesc));
# 594 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 105 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 105 "CPar.fsy"
                 : 'gentype_Vardesc));
# 605 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 107 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 107 "CPar.fsy"
                 : 'gentype_Vardesc));
# 617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Fundec));
# 630 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 114 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 114 "CPar.fsy"
                 : 'gentype_Fundec));
# 644 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "CPar.fsy"
                                                               [] 
                   )
# 119 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 654 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "CPar.fsy"
                                                               _1 
                   )
# 120 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 665 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 124 "CPar.fsy"
                                                               [_1]     
                   )
# 124 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 676 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 125 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 125 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 688 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 130 "CPar.fsy"
                                                               Block _2 
                   )
# 130 "CPar.fsy"
                 : 'gentype_Block));
# 699 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               [] 
                   )
# 134 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 135 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 721 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 136 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 733 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_VarDecWithAssign in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "CPar.fsy"
                                                               DecWithAssign (first _1,second _1,third _1) :: _3
                   )
# 137 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 745 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               _1 
                   )
# 140 "CPar.fsy"
                 : 'gentype_Stmt));
# 756 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1 
                   )
# 141 "CPar.fsy"
                 : 'gentype_Stmt));
# 767 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 778 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                               Return None          
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 788 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 147 "CPar.fsy"
                 : 'gentype_StmtM));
# 799 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "CPar.fsy"
                                                               _1                   
                   )
# 148 "CPar.fsy"
                 : 'gentype_StmtM));
# 810 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 149 "CPar.fsy"
                 : 'gentype_StmtM));
# 824 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 150 "CPar.fsy"
                 : 'gentype_StmtM));
# 837 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 151 "CPar.fsy"
                 : 'gentype_StmtM));
# 849 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_CaseList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "CPar.fsy"
                                                                        Switch (_3,_6)
                   )
# 152 "CPar.fsy"
                 : 'gentype_StmtM));
# 861 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "CPar.fsy"
                                                                               Break                
                   )
# 153 "CPar.fsy"
                 : 'gentype_StmtM));
# 871 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 157 "CPar.fsy"
                 : 'gentype_StmtU));
# 884 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 158 "CPar.fsy"
                 : 'gentype_StmtU));
# 896 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 159 "CPar.fsy"
                 : 'gentype_StmtU));
# 908 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "CPar.fsy"
                                                               Access _1           
                   )
# 163 "CPar.fsy"
                 : 'gentype_Expr));
# 919 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "CPar.fsy"
                                                               _1                  
                   )
# 164 "CPar.fsy"
                 : 'gentype_Expr));
# 930 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               [] 
                   )
# 167 "CPar.fsy"
                 : 'gentype_CaseList));
# 940 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CaseDec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               [_1]  
                   )
# 168 "CPar.fsy"
                 : 'gentype_CaseList));
# 951 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_CaseDec in
            let _2 = parseState.GetInput(2) :?> 'gentype_CaseList in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 169 "CPar.fsy"
                 : 'gentype_CaseList));
# 963 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            let _4 = parseState.GetInput(4) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               _2, _4 
                   )
# 174 "CPar.fsy"
                 : 'gentype_CaseDec));
# 975 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               _1                  
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 986 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               PreDec _2           
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 997 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               PreInc _2           
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1008 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                                PreDec _1           
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1019 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                                PreInc _1 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1030 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1042 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1054 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1065 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1076 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               Prim1("printc", nl) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1086 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1098 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1110 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1122 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1134 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1146 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1158 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 195 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1170 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 196 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1182 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 197 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1194 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 198 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 198 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1206 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 199 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 199 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1218 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 200 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 200 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1230 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 201 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 201 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1242 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 209 "CPar.fsy"
                                                               CstI _1             
                   )
# 209 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1253 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 210 "CPar.fsy"
                                                               _2                  
                   )
# 210 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1264 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 211 "CPar.fsy"
                                                               Addr _2             
                   )
# 211 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1275 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               AccVar _1           
                   )
# 215 "CPar.fsy"
                 : 'gentype_Access));
# 1286 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               _2                  
                   )
# 216 "CPar.fsy"
                 : 'gentype_Access));
# 1297 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 217 "CPar.fsy"
                 : 'gentype_Access));
# 1308 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 218 "CPar.fsy"
                 : 'gentype_Access));
# 1319 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 219 "CPar.fsy"
                 : 'gentype_Access));
# 1331 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "CPar.fsy"
                                                               []       
                   )
# 223 "CPar.fsy"
                 : 'gentype_Exprs));
# 1341 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 224 "CPar.fsy"
                                                               _1       
                   )
# 224 "CPar.fsy"
                 : 'gentype_Exprs));
# 1352 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 228 "CPar.fsy"
                                                               [_1]     
                   )
# 228 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1363 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 229 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 229 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1375 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "CPar.fsy"
                                                               _1       
                   )
# 233 "CPar.fsy"
                 : 'gentype_Const));
# 1386 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "CPar.fsy"
                                                               _1       
                   )
# 234 "CPar.fsy"
                 : 'gentype_Const));
# 1397 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "CPar.fsy"
                                                               - _2     
                   )
# 235 "CPar.fsy"
                 : 'gentype_Const));
# 1408 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               -1       
                   )
# 236 "CPar.fsy"
                 : 'gentype_Const));
# 1418 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               TypI     
                   )
# 240 "CPar.fsy"
                 : 'gentype_Type));
# 1428 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "CPar.fsy"
                                                               TypC     
                   )
# 241 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1439 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 49;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
